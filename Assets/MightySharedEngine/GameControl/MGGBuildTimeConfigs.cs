using System.Collections.Generic;

// NOTE! this file gets replaced ENTIRELY at build time with the actual build time configs
// you can use this file to set editor-time configs, but just beware that
// this file is completely obliterated and replaced with a shiny new
// version generated by the build process.

namespace MGG.Buildbot
{
    public class BuildTimeConfigs
    {
        public static string configForKey(string key, string defaultValue = null)
        {
            string val;
            if (configMap.TryGetValue(key, out val)) return val;
            return defaultValue;
        }

        public static Dictionary<string, string> configMap = new Dictionary<string, string>(10, System.StringComparer.OrdinalIgnoreCase)
        {
            // this is just an example
            // at build time this will have all the build vars marked YES for inclusion
            {"bundleID", "com.mightygamesgroup.test"},
            {"appName", "TEST-OSX"},
            {"base_version", "0.100"},
            {"buildNumber", "1"},
            {"bundleVersion", "e.dit.or"},
            {"marketplaceForLinking", "unknown"},
            {"autotestRouteKey", "DefaultRoute"},
            #if !UNITY_EDITOR
            {"hintedPressables", "YES"},
            {"expressHashing", "YES"},
            {"autoTestingGifEnabled", "YES"},
            #endif
            {"proofbotDisableCapture", "YES"},
            {"maxVerbosity", "NO"},
            {"autoTestingGifFps", "10"},
            {"autoTestingGifSeconds", "5"},
            {"autoTestingGifResPercent", "0.5"},
            {"autoTestingGifGenerateInApp", "YES"},
            {"autoTestingScreenCaptureEnabled", "YES"},
            {"autoTestingStatsCaptureEnabled", "YES"},
            {"iPhoneX", "portrait"},
            {"updateRoutes", "always"},
            // {"smartRouteEnabled", "YES"},
            {"autotestRouteGoogleDocID", "12Rz8EeDDOhXaugya--VQb1E9ThhqFF7ZdQ7iYBDcqX8"}
        };
    }
}
